# We do not use --platform feature to auto fill this ARG because of incompatibility between podman and docker
ARG BUILDPLATFORM=linux/amd64
ARG RUSTTARGET=x86_64-unknown-linux-gnu

FROM --platform=$BUILDPLATFORM rust:1 as bpfman-build

ARG BUILDPLATFORM
ARG RUSTTARGET

ARG TARGETARCH
ARG TARGETOS
ARG TARGETPLATFORM
ARG TARGETVARIANT

RUN echo "TARGETARCH=${{ TARGETARCH }}  TARGETOS=${{ TARGETOS }}  TARGETPLATFORM=${{ TARGETPLATFORM }}  TARGETVARIANT=${{ TARGETVARIANT }}"
RUN apt-get update

WORKDIR /usr/src/bpfman
COPY ./ /usr/src/bpfman

# Compile bpfman cli, bpfman-ns, and bpfman-rpc binaries
RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
      cargo build --release --target $RUSTTARGET;\
    elif [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
      apt-get install -y gcc-aarch64-linux-gnu && \
      rustup target add $RUSTTARGET && \
      CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc cargo build --release --target $RUSTTARGET; \
    elif [ "$TARGETPLATFORM" = "linux/ppc64le" ]; then \
      rustup target add $RUSTTARGET && \
      cargo build --release --target $RUSTTARGET; \
    elif [ "$TARGETPLATFORM" = "linux/s390x" ]; then \
      rustup target add $RUSTTARGET && \
      cargo build --release --target $RUSTTARGET; \
    fi

FROM --platform=$TARGETPLATFORM redhat/ubi9-minimal

ARG RUSTTARGET
ARG TARGETPLATFORM

COPY --from=bpfman-build  /usr/src/bpfman/target/$RUSTTARGET/release/bpfman .
COPY --from=bpfman-build  /usr/src/bpfman/target/$RUSTTARGET/release/bpfman-ns .
COPY --from=bpfman-build  /usr/src/bpfman/target/$RUSTTARGET/release/bpfman-rpc .

ENTRYPOINT ["./bpfman-rpc", "--timeout=0"]
